!function(t,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports):"function"==typeof define&&define.amd?define(["exports"],n):n((t="undefined"!=typeof globalThis?globalThis:t||self).bytesConvert={})}(this,(function(t){"use strict";function n(t){return Math.round(100*(t+Number.EPSILON))/100}var e,o;t.Units=void 0,(e=t.Units||(t.Units={})).BYTE="BYTE",e.OCTET="OCTET";var r=((o={})[t.Units.BYTE]=["B","KB","MB","GB","TB"],o[t.Units.OCTET]=["o","Ko","Mo","Go","To"],o),i=1e3;function u(n,e){if(n!==t.Units.BYTE&&n!==t.Units.OCTET)throw new Error("Unit not supported!");if(!e)throw new Error("Nothing to convert!");if(e<0)throw new Error("Value can't be a negative number!")}t.convertFromBits=function(e,o){void 0===o&&(o=t.Units.OCTET),u(o,e);var f=r[o],s=0,T=null;return f.some((function(t){var o=e/(8*Math.pow(10,s));if(o<i)return T=""+n(o)+t,!0;s+=3})),T||""+n(e/(8*Math.pow(10,12)))+f[f.length-1]},t.convertFromOctet=function(e,o){void 0===o&&(o=t.Units.OCTET),u(o,e);var f=r[o],s=e,T=null;return f.some((function(t){if(s<i)return T=""+n(s)+t,!0;s/=i})),T||""+n(s*i)+f[f.length-1]},Object.defineProperty(t,"__esModule",{value:!0})}));
